*---------------------------------------------------------------------*
*    view related FORM routines
*---------------------------------------------------------------------*
*...processing: YFIN_LP_V01.....................................*
FORM GET_DATA_YFIN_LP_V01.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM YFIN_LP_T01 WHERE
(VIM_WHERETAB) .
    CLEAR YFIN_LP_V01 .
YFIN_LP_V01-MANDT =
YFIN_LP_T01-MANDT .
YFIN_LP_V01-BUKRS =
YFIN_LP_T01-BUKRS .
YFIN_LP_V01-WAERS =
YFIN_LP_T01-WAERS .
YFIN_LP_V01-PKIND =
YFIN_LP_T01-PKIND .
YFIN_LP_V01-HNAME =
YFIN_LP_T01-HNAME .
YFIN_LP_V01-ROWNO =
YFIN_LP_T01-ROWNO .
<VIM_TOTAL_STRUC> = YFIN_LP_V01.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_YFIN_LP_V01 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO YFIN_LP_V01.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_YFIN_LP_V01-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM YFIN_LP_T01 WHERE
  BUKRS = YFIN_LP_V01-BUKRS AND
  PKIND = YFIN_LP_V01-PKIND AND
  WAERS = YFIN_LP_V01-WAERS .
    IF SY-SUBRC = 0.
    DELETE YFIN_LP_T01 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM YFIN_LP_T01 WHERE
  BUKRS = YFIN_LP_V01-BUKRS AND
  PKIND = YFIN_LP_V01-PKIND AND
  WAERS = YFIN_LP_V01-WAERS .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR YFIN_LP_T01.
    ENDIF.
YFIN_LP_T01-MANDT =
YFIN_LP_V01-MANDT .
YFIN_LP_T01-BUKRS =
YFIN_LP_V01-BUKRS .
YFIN_LP_T01-WAERS =
YFIN_LP_V01-WAERS .
YFIN_LP_T01-PKIND =
YFIN_LP_V01-PKIND .
YFIN_LP_T01-HNAME =
YFIN_LP_V01-HNAME .
YFIN_LP_T01-ROWNO =
YFIN_LP_V01-ROWNO .
    IF SY-SUBRC = 0.
    UPDATE YFIN_LP_T01 ##WARN_OK.
    ELSE.
    INSERT YFIN_LP_T01 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_YFIN_LP_V01-UPD_FLAG,
STATUS_YFIN_LP_V01-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_YFIN_LP_V01.
  SELECT SINGLE * FROM YFIN_LP_T01 WHERE
BUKRS = YFIN_LP_V01-BUKRS AND
PKIND = YFIN_LP_V01-PKIND AND
WAERS = YFIN_LP_V01-WAERS .
YFIN_LP_V01-MANDT =
YFIN_LP_T01-MANDT .
YFIN_LP_V01-BUKRS =
YFIN_LP_T01-BUKRS .
YFIN_LP_V01-WAERS =
YFIN_LP_T01-WAERS .
YFIN_LP_V01-PKIND =
YFIN_LP_T01-PKIND .
YFIN_LP_V01-HNAME =
YFIN_LP_T01-HNAME .
YFIN_LP_V01-ROWNO =
YFIN_LP_T01-ROWNO .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_YFIN_LP_V01 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE YFIN_LP_V01-BUKRS TO
YFIN_LP_T01-BUKRS .
MOVE YFIN_LP_V01-PKIND TO
YFIN_LP_T01-PKIND .
MOVE YFIN_LP_V01-WAERS TO
YFIN_LP_T01-WAERS .
MOVE YFIN_LP_V01-MANDT TO
YFIN_LP_T01-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'YFIN_LP_T01'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN YFIN_LP_T01 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'YFIN_LP_T01'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: YFIN_LP_V02.....................................*
FORM GET_DATA_YFIN_LP_V02.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM YFIN_LP_T02 WHERE
(VIM_WHERETAB) .
    CLEAR YFIN_LP_V02 .
YFIN_LP_V02-MANDT =
YFIN_LP_T02-MANDT .
YFIN_LP_V02-BUKRS =
YFIN_LP_T02-BUKRS .
YFIN_LP_V02-PKIND =
YFIN_LP_T02-PKIND .
YFIN_LP_V02-WAERS =
YFIN_LP_T02-WAERS .
YFIN_LP_V02-LQPOS =
YFIN_LP_T02-LQPOS .
YFIN_LP_V02-EBENE =
YFIN_LP_T02-EBENE .
YFIN_LP_V02-HNAME =
YFIN_LP_T02-HNAME .
YFIN_LP_V02-ROWNO =
YFIN_LP_T02-ROWNO .
YFIN_LP_V02-OVERW =
YFIN_LP_T02-OVERW .
<VIM_TOTAL_STRUC> = YFIN_LP_V02.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_YFIN_LP_V02 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO YFIN_LP_V02.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_YFIN_LP_V02-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM YFIN_LP_T02 WHERE
  BUKRS = YFIN_LP_V02-BUKRS AND
  PKIND = YFIN_LP_V02-PKIND AND
  WAERS = YFIN_LP_V02-WAERS AND
  LQPOS = YFIN_LP_V02-LQPOS .
    IF SY-SUBRC = 0.
    DELETE YFIN_LP_T02 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM YFIN_LP_T02 WHERE
  BUKRS = YFIN_LP_V02-BUKRS AND
  PKIND = YFIN_LP_V02-PKIND AND
  WAERS = YFIN_LP_V02-WAERS AND
  LQPOS = YFIN_LP_V02-LQPOS .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR YFIN_LP_T02.
    ENDIF.
YFIN_LP_T02-MANDT =
YFIN_LP_V02-MANDT .
YFIN_LP_T02-BUKRS =
YFIN_LP_V02-BUKRS .
YFIN_LP_T02-PKIND =
YFIN_LP_V02-PKIND .
YFIN_LP_T02-WAERS =
YFIN_LP_V02-WAERS .
YFIN_LP_T02-LQPOS =
YFIN_LP_V02-LQPOS .
YFIN_LP_T02-EBENE =
YFIN_LP_V02-EBENE .
YFIN_LP_T02-HNAME =
YFIN_LP_V02-HNAME .
YFIN_LP_T02-ROWNO =
YFIN_LP_V02-ROWNO .
YFIN_LP_T02-OVERW =
YFIN_LP_V02-OVERW .
    IF SY-SUBRC = 0.
    UPDATE YFIN_LP_T02 ##WARN_OK.
    ELSE.
    INSERT YFIN_LP_T02 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_YFIN_LP_V02-UPD_FLAG,
STATUS_YFIN_LP_V02-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_YFIN_LP_V02.
  SELECT SINGLE * FROM YFIN_LP_T02 WHERE
BUKRS = YFIN_LP_V02-BUKRS AND
PKIND = YFIN_LP_V02-PKIND AND
WAERS = YFIN_LP_V02-WAERS AND
LQPOS = YFIN_LP_V02-LQPOS .
YFIN_LP_V02-MANDT =
YFIN_LP_T02-MANDT .
YFIN_LP_V02-BUKRS =
YFIN_LP_T02-BUKRS .
YFIN_LP_V02-PKIND =
YFIN_LP_T02-PKIND .
YFIN_LP_V02-WAERS =
YFIN_LP_T02-WAERS .
YFIN_LP_V02-LQPOS =
YFIN_LP_T02-LQPOS .
YFIN_LP_V02-EBENE =
YFIN_LP_T02-EBENE .
YFIN_LP_V02-HNAME =
YFIN_LP_T02-HNAME .
YFIN_LP_V02-ROWNO =
YFIN_LP_T02-ROWNO .
YFIN_LP_V02-OVERW =
YFIN_LP_T02-OVERW .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_YFIN_LP_V02 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE YFIN_LP_V02-BUKRS TO
YFIN_LP_T02-BUKRS .
MOVE YFIN_LP_V02-PKIND TO
YFIN_LP_T02-PKIND .
MOVE YFIN_LP_V02-WAERS TO
YFIN_LP_T02-WAERS .
MOVE YFIN_LP_V02-LQPOS TO
YFIN_LP_T02-LQPOS .
MOVE YFIN_LP_V02-MANDT TO
YFIN_LP_T02-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'YFIN_LP_T02'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN YFIN_LP_T02 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'YFIN_LP_T02'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
